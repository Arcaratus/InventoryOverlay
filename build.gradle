buildscript {
    repositories {
        mavenCentral()
        maven {
            name "forge"
            url "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-${build_number}"

group = {package_group}
archivesBaseName = {mod_name}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: "20200916-1.16.2"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            mods {
                inventoryoverlay {
                    source sourceSets.main
                }
            }
        }
        server {
            properties 'forge.logging.console.level': 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            mods {
                inventoryoverlay {
                    source sourceSets.main
                }
            }
        }
        data {
            properties 'fml.earlyprogresswindow': 'false'
            properties 'mixin.env.disableRefMap': 'true'
            workingDirectory project.file('run')
            forceExit false
            mods {
                inventoryoverlay {
                    source sourceSets.main
                }
            }
            args '--mod', 'inventoryoverlay', '--all',
                    '--existing', '"' + file('src/main/resources/') + '"',
                    '--existing', '"' + file('src/generated/resources/') + '"',
                    '--output', '"' + file('src/generated/resources/') + '"'
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-34.1.11"
}

jar {
    manifest {
        attributes(["Specification-Title": "inventoryoverlay",
                    "Specification-Vendor": "inventoryoverlay",
                    "Specification-Version": "1",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor": "inventoryoverlay",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
}

artifacts {
    archives srcJar
}

///**
// * Increments the buildnumber in your config file, and saves it
// * Note: The doFirst is important, without it the build number
// * will be incremented every time tasks are configured, i.e every
// * time gradle is run on this project.
// */
//task incrementBuildNumber {
//    doFirst {
//        config.build_number = (config.build_number.toString().toInteger()) + 1
//        configFile.withWriter {
//            config.toProperties().store(it, "")
//        }
//    }
//}
//
//def parseConfig(File config) {
//    if(config.exists()){
//        config.withReader {
//            def prop = new Properties()
//            prop.load(it)
//            return (new ConfigSlurper().parse(prop))
//        }
//    } else {
//        return null
//    }
//}

publishing {
    tasks.publish.dependsOn build
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact srcJar
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}